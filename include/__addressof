/**
 * @file   libcpp/include/__addressof
 * @author Peter Züger
 * @date   27.10.2019
 * @brief  std::addressof
 * @note   defined in header <memory>
 *
 * This file is part of libcpp (https://gitlab.com/peterzuger/libcpp).
 * Copyright (c) 2019 Peter Züger.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
#ifndef ____ADDRESSOF__
#define ____ADDRESSOF__

namespace std{
    // 23.10.10, specialized algorithms
    template<class T>
    constexpr T* addressof(T& r)noexcept{
        return reinterpret_cast<T*>(
            const_cast<char*>(&reinterpret_cast<const volatile char&>(r)));
    }

    template<class T>
    const T* addressof(const T&&) = delete;
}

#endif /* ____ADDRESSOF__ */
