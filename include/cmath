/**
 * @file   cmath
 * @author Peter Zueger
 * @date   21.08.2018
 * @brief  C Mathematics
 */
#ifndef __CMATH__
#define __CMATH__

#include <math.h>

namespace std{
    using ::float_t;
    using ::double_t;

    float acos(float x); // see 20.2
    double acos(double x);
    long double acos(long double x); // see 20.2
    float acosf(float x);
    long double acosl(long double x);

    float asin(float x); // see 20.2
    double asin(double x);
    long double asin(long double x); // see 20.2
    float asinf(float x);
    long double asinl(long double x);

    float atan(float x); // see 20.2
    double atan(double x);
    long double atan(long double x); // see 20.2
    float atanf(float x);
    long double atanl(long double x);

    float atan2(float y, float x); // see 20.2
    double atan2(double y, double x);
    long double atan2(long double y, long double x);
    float atan2f(float y, float x);
    long double atan2l(long double y, long double x);

    float cos(float x); // see 20.2
    double cos(double x);
    long double cos(long double x); // see 20.2
    float cosf(float x);
    long double cosl(long double x);

    float sin(float x); // see 20.2
    double sin(double x);
    long double sin(long double x); // see 20.2
    float sinf(float x);
    long double sinl(long double x);

    float tan(float x); // see 20.2
    double tan(double x);
    long double tan(long double x); // see 20.2
    float tanf(float x);
    long double tanl(long double x);

    float acosh(float x); // see 20.2
    double acosh(double x);
    long double acosh(long double x); // see 20.2
    float acoshf(float x);
    long double acoshl(long double x);

    float asinh(float x); // see 20.2
    double asinh(double x);
    long double asinh(long double x); // see 20.2
    float asinhf(float x);
    long double asinhl(long double x);

    float atanh(float x); // see 20.2
    double atanh(double x);
    long double atanh(long double x); // see 20.2
    float atanhf(float x);
    long double atanhl(long double x);

    float cosh(float x); // see 20.2
    double cosh(double x);
    long double cosh(long double x); // see 20.2
    float coshf(float x);
    long double coshl(long double x);

    float sinh(float x); // see 20.2
    double sinh(double x);
    long double sinh(long double x); // see 20.2
    float sinhf(float x);
    long double sinhl(long double x);

    float tanh(float x); // see 20.2
    double tanh(double x);
    long double tanh(long double x); // see 20.2
    float tanhf(float x);
    long double tanhl(long double x);

    float exp(float x); // see 20.2
    double exp(double x);
    long double exp(long double x); // see 20.2
    float expf(float x);
    long double expl(long double x);

    float exp2(float x); // see 20.2
    double exp2(double x);
    long double exp2(long double x); // see 20.2
    float exp2f(float x);
    long double exp2l(long double x);

    float expm1(float x); // see 20.2
    double expm1(double x);
    long double expm1(long double x); // see 20.2
    float expm1f(float x);
    long double expm1l(long double x);

    float frexp(float value, int* exp); // see 20.2
    double frexp(double value, int* exp);
    long double frexp(long double value, int* exp); // see 20.2
    float frexpf(float value, int* exp);
    long double frexpl(long double value, int* exp);

    int ilogb(float x); // see 20.2
    int ilogb(double x);
    int ilogb(long double x); // see 20.2
    int ilogbf(float x);
    int ilogbl(long double x);

    float ldexp(float x, int exp); // see 20.2
    double ldexp(double x, int exp);
    long double ldexp(long double x, int exp); // see 20.2
    float ldexpf(float x, int exp);
    long double ldexpl(long double x, int exp);

    float log(float x); // see 20.2
    double log(double x);
    long double log(long double x); // see 20.2
    float logf(float x);
    long double logl(long double x);

    float log10(float x); // see 20.2
    double log10(double x);
    long double log10(long double x); // see 20.2
    float log10f(float x);
    long double log10l(long double x);

    float log1p(float x); // see 20.2
    double log1p(double x);
    long double log1p(long double x); // see 20.2
    float log1pf(float x);
    long double log1pl(long double x);

    float log2(float x); // see 20.2
    double log2(double x);
    long double log2(long double x); // see 20.2
    float log2f(float x);
    long double log2l(long double x);

    float logb(float x); // see 20.2
    double logb(double x);
    long double logb(long double x); // see 20.2
    float logbf(float x);
    long double logbl(long double x);

    float modf(float value, float* iptr); // see 20.2
    double modf(double value, double* iptr);
    long double modf(long double value, long double* iptr); // see 20.2
    float modff(float value, float* iptr);
    long double modfl(long double value, long double* iptr);

    float scalbn(float x, int n); // see 20.2
    double scalbn(double x, int n);
    long double scalbn(long double x, int n); // see 20.2
    float scalbnf(float x, int n);
    long double scalbnl(long double x, int n);

    float scalbln(float x, long int n); // see 20.2
    double scalbln(double x, long int n);
    long double scalbln(long double x, long int n); // see 20.2
    float scalblnf(float x, long int n);
    long double scalblnl(long double x, long int n);

    float cbrt(float x); // see 20.2
    double cbrt(double x);
    long double cbrt(long double x); // see 20.2
    float cbrtf(float x);
    long double cbrtl(long double x);

    // 29.9.2, absolute values
    int abs(int j);
    long int abs(long int j);
    long long int abs(long long int j);
    float abs(float j);
    double abs(double j);
    long double abs(long double j);

    float fabs(float x); // see 20.2
    double fabs(double x);
    long double fabs(long double x); // see 20.2
    float fabsf(float x);
    long double fabsl(long double x);

    float hypot(float x, float y); // see 20.2
    double hypot(double x, double y);
    long double hypot(long double x, long double y); // see 20.2
    float hypotf(float x, float y);
    long double hypotl(long double x, long double y);

    // 29.9.3, three-dimensional hypotenuse
    float hypot(float x, float y, float z);
    double hypot(double x, double y, double z);
    long double hypot(long double x, long double y, long double z);

    float pow(float x, float y); // see 20.2
    double pow(double x, double y);
    long double pow(long double x, long double y); // see 20.2
    float powf(float x, float y);
    long double powl(long double x, long double y);

    float sqrt(float x); // see 20.2
    double sqrt(double x);
    long double sqrt(long double x); // see 20.2
    float sqrtf(float x);
    long double sqrtl(long double x);

    float erf(float x); // see 20.2
    double erf(double x);
    long double erf(long double x); // see 20.2
    float erff(float x);
    long double erfl(long double x);

    float erfc(float x); // see 20.2
    double erfc(double x);
    long double erfc(long double x); // see 20.2
    float erfcf(float x);
    long double erfcl(long double x);

    float lgamma(float x); // see 20.2
    double lgamma(double x);
    long double lgamma(long double x); // see 20.2
    float lgammaf(float x);
    long double lgammal(long double x);

    float tgamma(float x); // see 20.2
    double tgamma(double x);
    long double tgamma(long double x); // see 20.2
    float tgammaf(float x);
    long double tgammal(long double x);

    float ceil(float x); // see 20.2
    double ceil(double x);
    long double ceil(long double x); // see 20.2
    float ceilf(float x);
    long double ceill(long double x);

    float floor(float x); // see 20.2
    double floor(double x);
    long double floor(long double x); // see 20.2
    float floorf(float x);
    long double floorl(long double x);

    float nearbyint(float x); // see 20.2
    double nearbyint(double x);
    long double nearbyint(long double x); // see 20.2
    float nearbyintf(float x);
    long double nearbyintl(long double x);

    float rint(float x); // see 20.2
    double rint(double x);
    long double rint(long double x); // see 20.2
    float rintf(float x);
    long double rintl(long double x);

    long int lrint(float x); // see 20.2
    long int lrint(double x);
    long int lrint(long double x); // see 20.2
    long int lrintf(float x);
    long int lrintl(long double x);

    long long int llrint(float x); // see 20.2
    long long int llrint(double x);
    long long int llrint(long double x); // see 20.2
    long long int llrintf(float x);
    long long int llrintl(long double x);

    float round(float x); // see 20.2
    double round(double x);
    long double round(long double x); // see 20.2
    float roundf(float x);
    long double roundl(long double x);

    long int lround(float x); // see 20.2
    long int lround(double x);
    long int lround(long double x); // see 20.2
    long int lroundf(float x);
    long int lroundl(long double x);

    long long int llround(float x); // see 20.2
    long long int llround(double x);
    long long int llround(long double x); // see 20.2
    long long int llroundf(float x);
    long long int llroundl(long double x);

    float trunc(float x); // see 20.2
    double trunc(double x);
    long double trunc(long double x); // see 20.2
    float truncf(float x);
    long double truncl(long double x);

    float fmod(float x, float y); // see 20.2
    double fmod(double x, double y);
    long double fmod(long double x, long double y); // see 20.2
    float fmodf(float x, float y);
    long double fmodl(long double x, long double y);

    float remainder(float x, float y); // see 20.2
    double remainder(double x, double y);
    long double remainder(long double x, long double y); // see 20.2
    float remainderf(float x, float y);
    long double remainderl(long double x, long double y);

    float remquo(float x, float y, int* quo); // see 20.2
    double remquo(double x, double y, int* quo);
    long double remquo(long double x, long double y, int* quo); // see 20.2
    float remquof(float x, float y, int* quo);
    long double remquol(long double x, long double y, int* quo);

    float copysign(float x, float y); // see 20.2
    double copysign(double x, double y);
    long double copysign(long double x, long double y); // see 20.2
    float copysignf(float x, float y);
    long double copysignl(long double x, long double y);

    double nan(const char* tagp);
    float nanf(const char* tagp);
    long double nanl(const char* tagp);

    float nextafter(float x, float y); // see 20.2
    double nextafter(double x, double y);
    long double nextafter(long double x, long double y); // see 20.2
    float nextafterf(float x, float y);
    long double nextafterl(long double x, long double y);

    float nexttoward(float x, long double y); // see 20.2
    double nexttoward(double x, long double y);
    long double nexttoward(long double x, long double y); // see 20.2
    float nexttowardf(float x, long double y);
    long double nexttowardl(long double x, long double y);

    float fdim(float x, float y); // see 20.2
    double fdim(double x, double y);
    long double fdim(long double x, long double y); // see 20.2
    float fdimf(float x, float y);
    long double fdiml(long double x, long double y);

    float fmax(float x, float y); // see 20.2
    double fmax(double x, double y);
    long double fmax(long double x, long double y); // see 20.2
    float fmaxf(float x, float y);
    long double fmaxl(long double x, long double y);

    float fmin(float x, float y); // see 20.2
    double fmin(double x, double y);
    long double fmin(long double x, long double y); // see 20.2
    float fminf(float x, float y);
    long double fminl(long double x, long double y);

    float fma(float x, float y, float z); // see 20.2
    double fma(double x, double y, double z);
    long double fma(long double x, long double y, long double z); // see 20.2
    float fmaf(float x, float y, float z);
    long double fmal(long double x, long double y, long double z);

    // 29.9.4, classification / comparison functions
    int fpclassify(float x);
    int fpclassify(double x);
    int fpclassify(long double x);

    int isfinite(float x);
    int isfinite(double x);
    int isfinite(long double x);

    int isinf(float x);
    int isinf(double x);
    int isinf(long double x);

    int isnan(float x);
    int isnan(double x);
    int isnan(long double x);

    int isnormal(float x);
    int isnormal(double x);
    int isnormal(long double x);

    int signbit(float x);
    int signbit(double x);
    int signbit(long double x);

    int isgreater(float x, float y);
    int isgreater(double x, double y);
    int isgreater(long double x, long double y);

    int isgreaterequal(float x, float y);
    int isgreaterequal(double x, double y);
    int isgreaterequal(long double x, long double y);

    int isless(float x, float y);
    int isless(double x, double y);
    int isless(long double x, long double y);

    int islessequal(float x, float y);
    int islessequal(double x, double y);
    int islessequal(long double x, long double y);

    int islessgreater(float x, float y);
    int islessgreater(double x, double y);
    int islessgreater(long double x, long double y);

    int isunordered(float x, float y);
    int isunordered(double x, double y);
    int isunordered(long double x, long double y);

    // 29.9.5, mathematical special functions
    // 29.9.5.1, associated Laguerre polynomials
    double assoc_laguerre(unsigned n, unsigned m, double x);
    float assoc_laguerref(unsigned n, unsigned m, float x);
    long double assoc_laguerrel(unsigned n, unsigned m, long double x);

    // 29.9.5.2, associated Legendre functions
    double assoc_legendre(unsigned l, unsigned m, double x);
    float assoc_legendref(unsigned l, unsigned m, float x);
    long double assoc_legendrel(unsigned l, unsigned m, long double x);

    // 29.9.5.3, beta function
    double beta(double x, double y);
    float betaf(float x, float y);
    long double betal(long double x, long double y);

    // 29.9.5.4, complete elliptic integral of the first kind
    double comp_ellint_1(double k);
    float comp_ellint_1f(float k);
    long double comp_ellint_1l(long double k);

    // 29.9.5.5, complete elliptic integral of the second kind
    double comp_ellint_2(double k);
    float comp_ellint_2f(float k);
    long double comp_ellint_2l(long double k);

    // 29.9.5.6, complete elliptic integral of the third kind
    double comp_ellint_3(double k, double nu);
    float comp_ellint_3f(float k, float nu);
    long double comp_ellint_3l(long double k, long double nu);

    // 29.9.5.7, regular modified cylindrical Bessel functions
    double cyl_bessel_i(double nu, double x);
    float cyl_bessel_if(float nu, float x);
    long double cyl_bessel_il(long double nu, long double x);

    // 29.9.5.8, cylindrical Bessel functions of the first kind
    double cyl_bessel_j(double nu, double x);
    float cyl_bessel_jf(float nu, float x);
    long double cyl_bessel_jl(long double nu, long double x);

    // 29.9.5.9, irregular modified cylindrical Bessel functions
    double cyl_bessel_k(double nu, double x);
    float cyl_bessel_kf(float nu, float x);
    long double cyl_bessel_kl(long double nu, long double x);

    // 29.9.5.10, cylindrical Neumann functions;
    // cylindrical Bessel functions of the second kind
    double cyl_neumann(double nu, double x);
    float cyl_neumannf(float nu, float x);
    long double cyl_neumannl(long double nu, long double x);

    // 29.9.5.11, incomplete elliptic integral of the first kind
    double ellint_1(double k, double phi);
    float ellint_1f(float k, float phi);
    long double ellint_1l(long double k, long double phi);

    // 29.9.5.12, incomplete elliptic integral of the second kind
    double ellint_2(double k, double phi);
    float ellint_2f(float k, float phi);
    long double ellint_2l(long double k, long double phi);

    // 29.9.5.13, incomplete elliptic integral of the third kind
    double ellint_3(double k, double nu, double phi);
    float ellint_3f(float k, float nu, float phi);
    long double ellint_3l(long double k, long double nu, long double phi);

    // 29.9.5.14, exponential integral
    double expint(double x);
    float expintf(float x);
    long double expintl(long double x);

    // 29.9.5.15, Hermite polynomials
    double hermite(unsigned n, double x);
    float hermitef(unsigned n, float x);
    long double hermitel(unsigned n, long double x);

    // 29.9.5.16, Laguerre polynomials
    double laguerre(unsigned n, double x);
    float laguerref(unsigned n, float x);
    long double laguerrel(unsigned n, long double x);

    // 29.9.5.17, Legendre polynomials
    double legendre(unsigned l, double x);
    float legendref(unsigned l, float x);
    long double legendrel(unsigned l, long double x);

    // 29.9.5.18, Riemann zeta function
    double riemann_zeta(double x);
    float riemann_zetaf(float x);
    long double riemann_zetal(long double x);

    // 29.9.5.19, spherical Bessel functions of the first kind
    double sph_bessel(unsigned n, double x);
    float sph_besself(unsigned n, float x);
    long double sph_bessell(unsigned n, long double x);

    // 29.9.5.20, spherical associated Legendre functions
    double sph_legendre(unsigned l, unsigned m, double theta);
    float sph_legendref(unsigned l, unsigned m, float theta);
    long double sph_legendrel(unsigned l, unsigned m, long double theta);

    // 29.9.5.21, spherical Neumann functions;
    // spherical Bessel functions of the second kind:
    double sph_neumann(unsigned n, double x);
    float sph_neumannf(unsigned n, float x);
    long double sph_neumannl(unsigned n, long double x);
}

#endif /* __CMATH__ */
